import pandas as pd
import numpy as np

# Pandas: sempre retorna um dataframe menor ou uma série. 
# A série é uma estrutura de dados unidimensional, semelhante a uma lista/array.

indices = ["Ted Lasso", "Parks & Recreation", "Vikings", "Suits", "Breaking Bad"]
colunas = ["Nota", "Temporadas", "Episódios"]
dados = [[9,4,34],[9,7,125],[9,6,89],[8,9,134],[10,5,62]]

df = pd.DataFrame(dados, index = indices, columns = colunas)
print(df)
print("="*50)

print("Nota:")
print(df["Nota"], "\n") # Tipo de dados: "series"

print("Temporadas:")
print(df["Temporadas"], "\n") # Tipo de dados: "series"
print("="*50)

print("Nota e Episódios:")
print(df[["Nota","Episódios"]], "\n") # Tipo de dados: "dataframe"
print("="*50)

print("Suits (loc):") # Para encontrar as linhas (quando tiver rótulo/índice)
print(df.loc["Suits"]) # Tipo de dados: "series"

print("Suits (iloc):") # Para encontrar as linhas (quando não tiver índice)
print(df.iloc[3]) # Tipo de dados: "series"
print("="*50)

# Encontrar elementos específicos de uma linha  (3 formas)
print("Nota de Suits:", df.loc["Suits", "Nota"]) # Tipo de dados: "numpy"
print("Nota de Suits:", df.iloc[3,0]) 
print("Nota de Suits:", df.at["Suits", "Nota"])
print("="*50)

# Pegar elementos específicos de mais de uma linha
print("Ted Lasso e Parks & Recreation, Nota e Temporadas:")
print(df.loc[["Ted Lasso", "Parks & Recreation"], ["Nota", "Temporadas"]]) # Tipo de dados: "dataframe"
print("="*50)

print("Usando slice:")
print(df.loc["Parks & Recreation":"Suits", "Temporadas":]) 
print(df.loc[:, ["Nota", "Temporadas"]]) # Usando o slice para pegar Nota e Temporada de todas as séries.

# OPERAÇÕES
print(df.head(2)) # Imprime as "n" primeiras linhas do dataframe
print(df.tail(2)) # Imprime as "n" últimas linhas do dataframe
print("="*50)

# Imprime os valores únicos do dataframe
print("Valores únicos de Nota:\n")
print(df["Nota"].unique())
print("="*50)

# Imprime a quantidade de valores únicos do dataframe
print("Número de valores únicos de Nota:\n")
print(df["Nota"].nunique())
print("="*50)

# Imprime a quantidade de valores para cada valor do dataframe
print("Contagem de valores:\n")
print(df["Nota"].value_counts())
print("="*50)

# As operações gerais de NumPy se mantém aqui:
print("Nota mínima nos dados:", df["Nota"].min())
print("Nota máxima nos dados:", df["Nota"].max())
print("Nota média nos dados:", df["Nota"].mean())
print("Mediana dos dados:", df["Nota"].median())
print("="*50)

# Para pegar os nomes das colunas:
print(df.columns) # Imprime os nomes das colunas
print(df.columns.to_list()) # Imprime o nome das colunas em forma de lista
print(df.columns.to_numpy()) # Imprime o nome das colunas em forma de numpy (tal qual lista, sem vírgula)
print(df.columns.values) # Mesma coisa do .to_numpy(), menos usado.
print("="*50)

# Podemos fazer para as linhas, ou índices, também
print(df.index)
print(df.index.to_list())
print(df.index.to_numpy())
print(df.index.values)
print("="*50)

# Podemos criar colunas nos dataframes
df["Coluna Extra"] = df["Nota"]/2
print(df)

# Também podemos excluir
df.drop("Coluna Extra", axis=1, inplace=True) # Eixo "1" é o das colunas
print(df)

df.drop("Vikings", inplace=True)
print(df)
